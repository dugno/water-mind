// Mocks generated by Mockito 5.4.4 from annotations
// in water_mind/test/core/database/daos/user_streak_dao_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:water_mind/src/core/database/database.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$WaterIntakeHistoryTableTable_1 extends _i1.SmartFake
    implements _i3.$WaterIntakeHistoryTableTable {
  _Fake$WaterIntakeHistoryTableTable_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$WaterIntakeEntryTableTable_2 extends _i1.SmartFake
    implements _i3.$WaterIntakeEntryTableTable {
  _Fake$WaterIntakeEntryTableTable_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$UserDataTableTable_3 extends _i1.SmartFake
    implements _i3.$UserDataTableTable {
  _Fake$UserDataTableTable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ReminderSettingsTableTable_4 extends _i1.SmartFake
    implements _i3.$ReminderSettingsTableTable {
  _Fake$ReminderSettingsTableTable_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$UserPreferencesTableTable_5 extends _i1.SmartFake
    implements _i3.$UserPreferencesTableTable {
  _Fake$UserPreferencesTableTable_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ForecastHydrationTableTable_6 extends _i1.SmartFake
    implements _i3.$ForecastHydrationTableTable {
  _Fake$ForecastHydrationTableTable_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$UserStreakTableTable_7 extends _i1.SmartFake
    implements _i3.$UserStreakTableTable {
  _Fake$UserStreakTableTable_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppDatabaseManager_8 extends _i1.SmartFake
    implements _i3.$AppDatabaseManager {
  _Fake$AppDatabaseManager_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_9 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_10 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_11 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_12 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_13 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_14 extends _i1.SmartFake
    implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_15 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_16 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_17<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_18<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_19<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_20<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_21<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSelectStatement_22<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_23<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_24<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_25 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i3.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i2.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_0(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i2.MigrationStrategy);

  @override
  _i3.$WaterIntakeHistoryTableTable get waterIntakeHistoryTable =>
      (super.noSuchMethod(
        Invocation.getter(#waterIntakeHistoryTable),
        returnValue: _Fake$WaterIntakeHistoryTableTable_1(
          this,
          Invocation.getter(#waterIntakeHistoryTable),
        ),
      ) as _i3.$WaterIntakeHistoryTableTable);

  @override
  _i3.$WaterIntakeEntryTableTable get waterIntakeEntryTable =>
      (super.noSuchMethod(
        Invocation.getter(#waterIntakeEntryTable),
        returnValue: _Fake$WaterIntakeEntryTableTable_2(
          this,
          Invocation.getter(#waterIntakeEntryTable),
        ),
      ) as _i3.$WaterIntakeEntryTableTable);

  @override
  _i3.$UserDataTableTable get userDataTable => (super.noSuchMethod(
        Invocation.getter(#userDataTable),
        returnValue: _Fake$UserDataTableTable_3(
          this,
          Invocation.getter(#userDataTable),
        ),
      ) as _i3.$UserDataTableTable);

  @override
  _i3.$ReminderSettingsTableTable get reminderSettingsTable =>
      (super.noSuchMethod(
        Invocation.getter(#reminderSettingsTable),
        returnValue: _Fake$ReminderSettingsTableTable_4(
          this,
          Invocation.getter(#reminderSettingsTable),
        ),
      ) as _i3.$ReminderSettingsTableTable);

  @override
  _i3.$UserPreferencesTableTable get userPreferencesTable =>
      (super.noSuchMethod(
        Invocation.getter(#userPreferencesTable),
        returnValue: _Fake$UserPreferencesTableTable_5(
          this,
          Invocation.getter(#userPreferencesTable),
        ),
      ) as _i3.$UserPreferencesTableTable);

  @override
  _i3.$ForecastHydrationTableTable get forecastHydrationTable =>
      (super.noSuchMethod(
        Invocation.getter(#forecastHydrationTable),
        returnValue: _Fake$ForecastHydrationTableTable_6(
          this,
          Invocation.getter(#forecastHydrationTable),
        ),
      ) as _i3.$ForecastHydrationTableTable);

  @override
  _i3.$UserStreakTableTable get userStreakTable => (super.noSuchMethod(
        Invocation.getter(#userStreakTable),
        returnValue: _Fake$UserStreakTableTable_7(
          this,
          Invocation.getter(#userStreakTable),
        ),
      ) as _i3.$UserStreakTableTable);

  @override
  _i3.$AppDatabaseManager get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: _Fake$AppDatabaseManager_8(
          this,
          Invocation.getter(#managers),
        ),
      ) as _i3.$AppDatabaseManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
      ) as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i2.DatabaseSchemaEntity>[],
      ) as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_9(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_10(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_11(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i2.StreamQueryUpdateRules);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_12(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i6.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_13(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i4.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_14(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i4.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_15(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i5.Future<void> validateDatabaseIntegrity() => (super.noSuchMethod(
        Invocation.method(
          #validateDatabaseIntegrity,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.WaterIntakeHistoryTableData?> getWaterIntakeHistoryByDate(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWaterIntakeHistoryByDate,
          [date],
        ),
        returnValue: _i5.Future<_i3.WaterIntakeHistoryTableData?>.value(),
      ) as _i5.Future<_i3.WaterIntakeHistoryTableData?>);

  @override
  _i5.Future<List<_i3.WaterIntakeHistoryTableData>> getAllWaterIntakeHistory({
    int? limit,
    int? offset,
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWaterIntakeHistory,
          [],
          {
            #limit: limit,
            #offset: offset,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i5.Future<List<_i3.WaterIntakeHistoryTableData>>.value(
            <_i3.WaterIntakeHistoryTableData>[]),
      ) as _i5.Future<List<_i3.WaterIntakeHistoryTableData>>);

  @override
  _i5.Future<List<_i3.WaterIntakeEntryTableData>> getEntriesByHistoryId(
    String? historyId, {
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEntriesByHistoryId,
          [historyId],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<List<_i3.WaterIntakeEntryTableData>>.value(
            <_i3.WaterIntakeEntryTableData>[]),
      ) as _i5.Future<List<_i3.WaterIntakeEntryTableData>>);

  @override
  _i5.Future<void> insertOrUpdateWaterIntakeHistory(
          _i3.WaterIntakeHistoryTableCompanion? history) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateWaterIntakeHistory,
          [history],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> insertWaterIntakeEntry(
          _i3.WaterIntakeEntryTableCompanion? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWaterIntakeEntry,
          [entry],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> deleteWaterIntakeEntry(String? entryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWaterIntakeEntry,
          [entryId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllWaterIntakeHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearAllWaterIntakeHistory,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteWaterIntakeHistoryOlderThan(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWaterIntakeHistoryOlderThan,
          [date],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserDataTableData?> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i5.Future<_i3.UserDataTableData?>.value(),
      ) as _i5.Future<_i3.UserDataTableData?>);

  @override
  _i5.Future<void> saveUserData(_i3.UserDataTableCompanion? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserData,
          [userData],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.ReminderSettingsTableData?> getReminderSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReminderSettings,
          [],
        ),
        returnValue: _i5.Future<_i3.ReminderSettingsTableData?>.value(),
      ) as _i5.Future<_i3.ReminderSettingsTableData?>);

  @override
  _i5.Future<void> saveReminderSettings(
          _i3.ReminderSettingsTableCompanion? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveReminderSettings,
          [settings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearReminderSettings() => (super.noSuchMethod(
        Invocation.method(
          #clearReminderSettings,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserPreferencesTableData?> getUserPreferences() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserPreferences,
          [],
        ),
        returnValue: _i5.Future<_i3.UserPreferencesTableData?>.value(),
      ) as _i5.Future<_i3.UserPreferencesTableData?>);

  @override
  _i5.Future<void> saveUserPreferences(
          _i3.UserPreferencesTableCompanion? preferences) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserPreferences,
          [preferences],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateLastDrinkInfo(
    String? drinkTypeId,
    double? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastDrinkInfo,
          [
            drinkTypeId,
            amount,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserStreakTableData?> getUserStreak() => (super.noSuchMethod(
        Invocation.method(
          #getUserStreak,
          [],
        ),
        returnValue: _i5.Future<_i3.UserStreakTableData?>.value(),
      ) as _i5.Future<_i3.UserStreakTableData?>);

  @override
  _i5.Future<void> saveUserStreak(_i3.UserStreakTableCompanion? streak) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserStreak,
          [streak],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateUserStreak(DateTime? activityDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserStreak,
          [activityDate],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.ForecastHydrationTableData?> getForecastHydration(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecastHydration,
          [date],
        ),
        returnValue: _i5.Future<_i3.ForecastHydrationTableData?>.value(),
      ) as _i5.Future<_i3.ForecastHydrationTableData?>);

  @override
  _i5.Future<List<_i3.ForecastHydrationTableData>> getForecastHydrationRange(
    DateTime? startDate,
    int? days,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecastHydrationRange,
          [
            startDate,
            days,
          ],
        ),
        returnValue: _i5.Future<List<_i3.ForecastHydrationTableData>>.value(
            <_i3.ForecastHydrationTableData>[]),
      ) as _i5.Future<List<_i3.ForecastHydrationTableData>>);

  @override
  _i5.Future<void> saveForecastHydration(
          _i3.ForecastHydrationTableCompanion? forecast) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveForecastHydration,
          [forecast],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> deleteForecastHydrationOlderThan(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteForecastHydrationOlderThan,
          [date],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i2.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_16(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i2.Migrator);

  @override
  _i5.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<T> createStream<T extends Object>(
          _i4.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i5.Stream<T>.empty(),
      ) as _i5.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i6.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i5.Stream<Set<_i2.TableUpdate>>);

  @override
  _i5.Future<T> doWhenOpened<T>(
          _i5.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_18<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_19<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_20<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_21<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_22<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_23<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i5.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_24<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_24<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i5.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<T> exclusively<T>(_i5.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_25(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_25(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}
